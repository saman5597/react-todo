[{"/home/saman/Documents/React/react-todo/src/index.js":"1","/home/saman/Documents/React/react-todo/src/App.js":"2","/home/saman/Documents/React/react-todo/src/reportWebVitals.js":"3","/home/saman/Documents/React/react-todo/src/components/Form.js":"4","/home/saman/Documents/React/react-todo/src/components/TodoList.js":"5","/home/saman/Documents/React/react-todo/src/components/Todo.js":"6"},{"size":500,"mtime":1612351458332,"results":"7","hashOfConfig":"8"},{"size":1192,"mtime":1612430464489,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1612351458332,"results":"10","hashOfConfig":"8"},{"size":1258,"mtime":1612429284567,"results":"11","hashOfConfig":"8"},{"size":577,"mtime":1612431488362,"results":"12","hashOfConfig":"8"},{"size":833,"mtime":1612428851267,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"56b7qk",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/saman/Documents/React/react-todo/src/index.js",[],["29","30"],"/home/saman/Documents/React/react-todo/src/App.js",["31"],"import './App.css';\nimport React, {useState, useEffect} from 'react'\nimport Form from './components/Form';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n\n  const [inputText, setInputText] = useState(\"\")\n  const [todos, setTodos] = useState([])\n  const [status, setStatus] = useState(\"all\")\n  const [filteredTodos, setFilteredTodos] =  useState([])\n\n  useEffect(() => {\n    filterHandler()\n  }, [todos, status])\n\n  const filterHandler = () => {\n    switch (status) {\n      case \"completed\":  \n        setFilteredTodos(todos.filter(todo => todo.completed === true))\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter(todo => todo.completed === false))\n        break;\n      default:\n        setFilteredTodos(todos)\n        break;\n    }\n  }\n\n  return (\n    <div>\n\n      <header>\n        <h1>Todo List</h1>\n      </header>\n\n      <Form todos={todos} \n            inputText={inputText} \n            setTodos={setTodos}\n            setInputText={setInputText} \n            setStatus={setStatus} />\n\n      <TodoList todos={todos} \n                filteredTodos={filteredTodos}\n                setTodos={setTodos} />\n\n    </div>\n  )\n}\n\nexport default App\n","/home/saman/Documents/React/react-todo/src/reportWebVitals.js",[],"/home/saman/Documents/React/react-todo/src/components/Form.js",["32"],"import React from 'react'\n\nfunction Form({inputText, setInputText, todos, setTodos, setStatus}) {\n\n    const inputTextHandler = (event) => {\n        setInputText(event.target.value)\n    } \n\n    const submitTodoHandler = event => {\n        event.preventDefault()\n        if (inputText.trim()) {\n            setTodos([...todos, {text: inputText, completed: false, id: Math.random() * 1000}])    \n        }\n        setInputText(\"\")\n    }\n\n    const statusHandler = event => {\n        setStatus(event.target.value)\n    }\n\n    return (\n        <form>\n            <input onChange={inputTextHandler} value={inputText} type=\"text\" className=\"todo-input\" />\n            <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\n                <i className=\"fas fa-plus-square\"></i>\n            </button>\n            <div className=\"select\">\n                <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\n                    <option value=\"all\">All</option>\n                    <option value=\"completed\">Completed</option>\n                    <option value=\"uncompleted\">Uncompleted</option>\n                </select>\n            </div>\n        </form>\n    )\n}\n\nconst styleSheet = {\n    display: \"none\"\n}\n\nexport default Form\n","/home/saman/Documents/React/react-todo/src/components/TodoList.js",[],"/home/saman/Documents/React/react-todo/src/components/Todo.js",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":15,"column":6,"nodeType":"39","endLine":15,"endColumn":21,"suggestions":"40"},{"ruleId":"41","severity":1,"message":"42","line":38,"column":7,"nodeType":"43","messageId":"44","endLine":38,"endColumn":17},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filterHandler'. Either include it or remove the dependency array.","ArrayExpression",["47"],"no-unused-vars","'styleSheet' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"48","fix":"49"},"Update the dependencies array to be: [todos, status, filterHandler]",{"range":"50","text":"51"},[412,427],"[todos, status, filterHandler]"]