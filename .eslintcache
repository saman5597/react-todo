[{"/home/saman/Documents/React/react-todo/src/index.js":"1","/home/saman/Documents/React/react-todo/src/App.js":"2","/home/saman/Documents/React/react-todo/src/reportWebVitals.js":"3","/home/saman/Documents/React/react-todo/src/components/Form.js":"4","/home/saman/Documents/React/react-todo/src/components/TodoList.js":"5","/home/saman/Documents/React/react-todo/src/components/Todo.js":"6"},{"size":500,"mtime":1612351458332,"results":"7","hashOfConfig":"8"},{"size":1192,"mtime":1612430464489,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1612351458332,"results":"10","hashOfConfig":"8"},{"size":1214,"mtime":1614660062263,"results":"11","hashOfConfig":"8"},{"size":577,"mtime":1612431488362,"results":"12","hashOfConfig":"8"},{"size":833,"mtime":1612428851267,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"56b7qk",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/home/saman/Documents/React/react-todo/src/index.js",[],["28","29"],"/home/saman/Documents/React/react-todo/src/App.js",["30"],"import './App.css';\nimport React, {useState, useEffect} from 'react'\nimport Form from './components/Form';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n\n  const [inputText, setInputText] = useState(\"\")\n  const [todos, setTodos] = useState([])\n  const [status, setStatus] = useState(\"all\")\n  const [filteredTodos, setFilteredTodos] =  useState([])\n\n  useEffect(() => {\n    filterHandler()\n  }, [todos, status])\n\n  const filterHandler = () => {\n    switch (status) {\n      case \"completed\":  \n        setFilteredTodos(todos.filter(todo => todo.completed === true))\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter(todo => todo.completed === false))\n        break;\n      default:\n        setFilteredTodos(todos)\n        break;\n    }\n  }\n\n  return (\n    <div>\n\n      <header>\n        <h1>Todo List</h1>\n      </header>\n\n      <Form todos={todos} \n            inputText={inputText} \n            setTodos={setTodos}\n            setInputText={setInputText} \n            setStatus={setStatus} />\n\n      <TodoList todos={todos} \n                filteredTodos={filteredTodos}\n                setTodos={setTodos} />\n\n    </div>\n  )\n}\n\nexport default App\n","/home/saman/Documents/React/react-todo/src/reportWebVitals.js",[],"/home/saman/Documents/React/react-todo/src/components/Form.js",[],"/home/saman/Documents/React/react-todo/src/components/TodoList.js",[],"/home/saman/Documents/React/react-todo/src/components/Todo.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":15,"column":6,"nodeType":"37","endLine":15,"endColumn":21,"suggestions":"38"},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filterHandler'. Either include it or remove the dependency array.","ArrayExpression",["41"],"no-global-assign","no-unsafe-negation",{"desc":"42","fix":"43"},"Update the dependencies array to be: [todos, status, filterHandler]",{"range":"44","text":"45"},[412,427],"[todos, status, filterHandler]"]